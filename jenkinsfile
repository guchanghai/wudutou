/*************************************************************************
 * ADOBE CONFIDENTIAL
 * ___________________
 *
 * Copyright 2024 Adobe
 * All Rights Reserved.
 *
 * NOTICE: All information contained herein is, and remains
 * the property of Adobe and its suppliers, if any. The intellectual
 * and technical concepts contained herein are proprietary to Adobe
 * and its suppliers and are protected by all applicable intellectual
 * property laws, including trade secret and copyright laws.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe.
 **************************************************************************/
import hudson.model.Result
import groovy.json.JsonOutput
import jenkins.model.CauseOfInterruption.UserInterruption
import org.jenkinsci.plugins.workflow.steps.FlowInterruptedException
import java.text.SimpleDateFormat
import java.util.regex.Matcher

projectName = "wudutou"
mainBranchName = "main"

pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building...'
                echo "Branch: ${env.BRANCH_NAME}"
            }
        }
        stage('Test') {
            steps {
                echo 'Testing...'
                // Add your test steps here
            }
        }
        stage('Unit Test') {
            steps {
                echo 'Testing...'
                // Add your test steps here
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying...'
                // Add your deploy steps here
            }
        }
        stage('Publish') {
            steps {
                echo 'Publishing...'
                // Add your publish steps here

                script {
                    dir('packages/clio-playground') {
                        try {
                            echo "Test if the directory exists"
                        } catch (e) {
                            echo "Directory does not exist"
                        } finally {
                            echo "Finally block"
                            def htmlFiles = findFiles glob: 'build-cache/coverage-dir/**/*.html'
                            def htmlFilesCount = htmlFiles.length
                            boolean coverExists = htmlFiles.length > 0
                            echo "Found ${htmlFilesCount} HTML files there is ${coverExists ? 'coverage' : 'no coverage'}"
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            archiveArtifacts artifacts: '**', allowEmptyArchive: true

            publishHTML(target: [
                reportName: 'Wudutou Report',
                reportDir: 'public', // Directory where the report is generated
                reportFiles: 'index.html', // Main report file
                alwaysLinkToLastBuild: true,
                keepAll: true
            ])

            publishHTML(target: [
                reportName: 'Another Report',
                reportDir: 'public', // Directory where the report is generated
                reportFiles: 'index.html', // Main report file
                alwaysLinkToLastBuild: true,
                keepAll: true
            ])
        }
    }
}
